# Generated by Django 5.1.3 on 2024-12-11 20:39

import django.core.validators
import re
import wagtail.fields
from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("magazine", "0034_alter_magazinearticle_options_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="magazinearticle",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    ("heading", 4),
                    ("rich_text", 5),
                    ("pullquote", 6),
                    ("document", 7),
                    ("image", 13),
                    ("spacer", 15),
                    ("preformatted_text", 16),
                    ("embed", 17),
                ],
                block_lookup={
                    0: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [
                                ("h2", "Level 2 (child of level 1)"),
                                ("h3", "Level 3 (child of level 2)"),
                                ("h4", "Level 4 (child of level 3)"),
                                ("h5", "Level 5 (child of level 4)"),
                                ("h6", "Level 6 (child of level 5)"),
                            ],
                            "help_text": "These different heading levels help to communicate the organization and hierarchy of the content on a page.",
                        },
                    ),
                    1: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {"help_text": "The text to appear in the heading."},
                    ),
                    2: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": "Used to link to a specific location within this page. A slug should only contain letters, numbers, underscore (_), or hyphen (-).",
                            "required": False,
                            "validators": (
                                django.core.validators.RegexValidator(
                                    re.compile("^[-a-zA-Z0-9_]+\\Z"),
                                    "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                                    "invalid",
                                ),
                            ),
                        },
                    ),
                    3: (
                        "wagtail_color_panel.blocks.NativeColorBlock",
                        (),
                        {"required": False},
                    ),
                    4: (
                        "wagtail.blocks.StructBlock",
                        [
                            [
                                ("heading_level", 0),
                                ("heading_text", 1),
                                ("target_slug", 2),
                                ("color", 3),
                            ]
                        ],
                        {},
                    ),
                    5: (
                        "wagtail.blocks.RichTextBlock",
                        (),
                        {
                            "features": [
                                "bold",
                                "italic",
                                "ol",
                                "ul",
                                "hr",
                                "link",
                                "document-link",
                                "superscript",
                                "superscript",
                                "strikethrough",
                                "blockquote",
                                "embed",
                            ]
                        },
                    ),
                    6: ("blocks.blocks.PullQuoteBlock", (), {}),
                    7: ("documents.blocks.DocumentEmbedBlock", (), {}),
                    8: ("wagtail.images.blocks.ImageChooserBlock", (), {}),
                    9: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": "Optional caption (tooltip) to display with the image.",
                            "required": False,
                        },
                    ),
                    10: (
                        "wagtail.blocks.IntegerBlock",
                        (),
                        {
                            "help_text": "Enter the desired image width value in pixels up to 800 max.",
                            "max_value": 800,
                            "min_value": 0,
                        },
                    ),
                    11: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [("left", "Left"), ("right", "Right")],
                            "help_test": "Optionally align image left or right. Will default to block alignment.",
                            "icon": "file-richtext",
                            "required": False,
                        },
                    ),
                    12: (
                        "wagtail.blocks.URLBlock",
                        (),
                        {
                            "help_text": "Optional web address to use as image link.",
                            "required": False,
                        },
                    ),
                    13: (
                        "wagtail.blocks.StructBlock",
                        [
                            [
                                ("image", 8),
                                ("caption", 9),
                                ("width", 10),
                                ("align", 11),
                                ("link", 12),
                            ]
                        ],
                        {"classname": "full title"},
                    ),
                    14: (
                        "wagtail.blocks.DecimalBlock",
                        (),
                        {
                            "decimal_places": 1,
                            "help_text": "The height of this spacer in 'em' values where 1 em is one uppercase M.",
                            "min_value": 0,
                        },
                    ),
                    15: ("wagtail.blocks.StructBlock", [[("height", 14)]], {}),
                    16: ("blocks.blocks.PreformattedTextBlock", (), {}),
                    17: (
                        "wagtail.embeds.blocks.EmbedBlock",
                        (),
                        {"max_height": 400, "max_width": 800},
                    ),
                },
            ),
        ),
    ]
